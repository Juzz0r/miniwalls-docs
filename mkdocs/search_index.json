{
    "docs": [
        {
            "location": "/", 
            "text": "Spigot Mini Walls Plugin - Documentation\n\n\nInstallation\n\n\nPrerequisites\n\n\n\n\nJava 8 or newer\n\n\nSpigot server with Minecraft 1.8.*, 1.9.* or 1.10\n\n\nVault\n\n\nProtocolLib\n\n\nAn economy plugin that hooks with Vault. You only need it when you want to enable economy (players receive currency for kills, can buy kits for in-game currency etc)\n\n\n\n\nIf you have BungeeCord or Lilypad server it\u2019s recommended to create separate server to run MiniWalls. If you can\u2019t create separate server for MiniWalls it\u2019s not recommended to run other games on this server as\u00a0they\u00a0may\u00a0conflict\u00a0with\u00a0MiniWalls.\n\n\nInstalling\u00a0plugin\n\n\n\n\nDownload the plugin from Spigot\n\n\nCopy plugin jar (for example MiniWalls.jar or whatever the plugin's version is) to your server plugins directory\n\n\nStart server\n\n\nLook for any errors in console. If there are any you probably don't met all the prerequisites. If you can't figure out why you're having errors and can't fix them contact me by PM on Spigot and I will help you out. \nIgnore\n errors starting like this: \njava.lang.RuntimeException: java.io.FileNotFoundException: Source 'plugins\\MiniWalls\\map-forest' does not exist\n, these are there because you haven't setup the plugin yet.\n\n\nStop server\n\n\nDownload and copy map directories \nmap-forest\n and \nmap-volcano\n to the plugin directory \nplugins/MiniWalls\n. Do this only if you want to use premade maps. \nClick here to download!\n\n\nConfigure the config files (tutorial below) (This step is optional. If you have copied map directories and your server mets all prerequisites you are ready to use the plugin)\n\n\nStart server and have fun!\n\n\n\n\nConfiguration files\n\n\nWith MiniWalls come quite a few configuration files. They are located in plugin's main directory \nplugins/MiniWalls\n.\n\n\nThere are 4 files in total - \nconfig.json\n, \nkits.json\n, \nmaps.json\n and \nen.properties\n. Files ending with .json use JSON syntax and \nen.properties\n uses Java .properties syntax.\n\n\nJSON\n\n\n\n\nIntroduction and Syntax\n\n\nOnline validator (check if your file follows syntax)\n\n\n\n\n.properties\n\n\n\n\nIntroduction and Syntax\n\n\n\n\nData types\n\n\nIn JSON configuration files there is a data type for every configuration value. That means that each item/key needs a specific value. For example \ncurrencyPerKill\n in economy config needs a value which is integer, but \nenabled\n in the same config needs a boolean value (true or false). Here is a table of all data types currently in use in config files. \n\n\n\n\n\n\n\n\nData type\n\n\nValue\n\n\nExample\n\n\n\n\n\n\n\n\n\n\nboolean\n\n\ntrue or false\n\n\ntrue\n\n\n\n\n\n\nstring\n\n\na sequence of characters\n\n\n\"hey that's a string\"\n\n\n\n\n\n\ninteger\n\n\nan integer\n\n\n15\n\n\n\n\n\n\nnumber\n\n\nan integer or floating point number\n\n\n7.25\n\n\n\n\n\n\nduration\n\n\nduration in milliseconds\n\n\n15000\n\n\n\n\n\n\nmaterial\n\n\nminecraft material name string,  \nclick here\n for list\n\n\n\"diamond_pickaxe\"\n\n\n\n\n\n\nchat color\n\n\nminecraft color string, \nclick here\n for list\n\n\n\"\nc\"\n\n\n\n\n\n\nitemstack\n\n\nMinecraft item as JSON object containing \nmaterial\n,  \namount\n, \ndata\n and \nunbreakable\n\n\n{\"material\": \"wool\",\"data\": 14, \"amount\": 64}\n\n\n\n\n\n\nitemstack.material\n\n\nmaterial of the itemstack\n\n\nsee above - material\n\n\n\n\n\n\nitemstack.amount\n\n\ninteger size of itemstack (optional, default 1)\n\n\nsee above - integer\n\n\n\n\n\n\nitemstack.data\n\n\ninteger data/durability of itemstack (optional, default 0)\n\n\nsee above - integer\n\n\n\n\n\n\nitemstack.unbreakable\n\n\nboolean value whether itemstack is unbreakable (optional, default false)\n\n\nsee above - boolean\n\n\n\n\n\n\nlocation\n\n\nJSON object containing x, y and z coordinates\n\n\n{\"x\": 147, \"y\": 64.5, \"z\": -1024}\n\n\n\n\n\n\nlocation.x, location.y, location.z,\n\n\nnumber value of the coordinate\n\n\nsee above - number\n\n\n\n\n\n\ncuboid\n\n\nJSON object containing bounds of cuboid\n\n\n{\"loc1\": {\"x\": 15, \"y\": 0, \"z\": -25.5}, \"loc2\": {\"x\": 768, \"y\": 25, \"z\": 400}}\n\n\n\n\n\n\ncuboid.loc1, cuboid.loc2\n\n\nlocation of bound\n\n\nsee above - location\n\n\n\n\n\n\n\n\nGeneral Config\n\n\nGeneral config is in \nconfig.json\n file and contains most of the settings of the MiniWalls plugin. Here is a table which explains what each setting there does.\n\n\n\n\n\n\n\n\nkey\n\n\nvalue type\n\n\ndefault\n\n\nexplanation\n\n\n\n\n\n\n\n\n\n\ngeneral.locale\n\n\nstring\n\n\nen.properties\n\n\nfile where plugin looks for translations; has to be located in plugin directory \nplugins/MiniWalls\n\n\n\n\n\n\ngeneral.balanceTeams\n\n\nboolean\n\n\ntrue\n\n\nif true players can't join teams that are bigger than their current team\n\n\n\n\n\n\ngeneral.showServerJoinMessages\n\n\nboolean\n\n\nfalse\n\n\nif false players are not informed when someone joins the server\n\n\n\n\n\n\ngeneral.signs\n\n\nboolean\n\n\nfalse\n\n\nwhether signs are enabled (see below: \nSigns\n)\n\n\n\n\n\n\neconomy.enabled\n\n\nboolean\n\n\ntrue\n\n\nif true players receive currency for certain activities and can buy kits;\n\n\n\n\n\n\neconomy.currencyPerKill\n\n\ninteger\n\n\n10\n\n\nthe amount of currency player receives when (s)he gets a kill\n\n\n\n\n\n\neconomy.currencyPerAssist\n\n\ninteger\n\n\n3\n\n\nthe amount of currency player receives when (s)he gets a kill assist\n\n\n\n\n\n\neconomy.currencyPerWin\n\n\ninteger\n\n\n50\n\n\nthe amount of currency player receives when (s)he wins a game\n\n\n\n\n\n\neconomy.currencyPerGame\n\n\ninteger\n\n\n15\n\n\nthe amount of currency player receives when (s)he plays a game\n\n\n\n\n\n\nbungeeMode.enabled\n\n\nboolean\n\n\nfalse\n\n\nif true plugin attempts to send player to \nbungeeMode.arena\n after joining and to \nbungeeMode.hub\n after player quits.\n\n\n\n\n\n\nbungeeMode.arena\n\n\nstring\n\n\nMiniWalls-1\n\n\narena name where player is sent to after joining the server\n\n\n\n\n\n\nbungeeMode.hub\n\n\nstring\n\n\nhub\n\n\nserver name where player is sent to after quitting\n\n\n\n\n\n\ndata.storageType\n\n\nstring\n\n\nfile\n\n\nhow player data (stats, unlocked kits etc) are stored; \nfile\n or \nmysql\n\n\n\n\n\n\ndata.mysql.host\n\n\nstring\n\n\nlocalhost\n\n\nmysql host\n\n\n\n\n\n\ndata.mysql.port\n\n\ninteger\n\n\n3306\n\n\nmysql port\n\n\n\n\n\n\ndata.mysql.username\n\n\nstring\n\n\nroot\n\n\nmysql username\n\n\n\n\n\n\ndata.mysql.password\n\n\nstring\n\n\n\n\nmysql password\n\n\n\n\n\n\ndata.mysql.db\n\n\nstring\n\n\nminiwalls\n\n\nmysql database\n\n\n\n\n\n\ndata.file.directory\n\n\nstring\n\n\ndb\n\n\ndirectory where player data is stored when \nstorageType\n is \nfile\n; it's relative to plugin directory, so for default it's \nplugins/MiniWalls/db\n\n\n\n\n\n\narena\n\n\narena config\n\n\n\n\nSee Arenas\n\n\n\n\n\n\nteams\n\n\narray of teams\n\n\n\n\nSee more information about that in Team\n\n\n\n\n\n\narenas\n\n\narray of arenas\n\n\n\n\nSee Arenas\n\n\n\n\n\n\n\n\nArenas\n\n\nEach arena is a Mini Walls game to where player can connect. Every arena has it's own players, world etc. Arenas are configured in main config file \nconfig.json\n. They are set in an array \narenas\n. \n\n\nEvery JSON object in \narenas\n contains a setting \nname\n. Data type of this setting is \nstring\n.\n\n\nname\n is the only setting you need to set for every arena. For example arena JSON object can look like \n{\"name\": \"MyAwesomeArena\"}\n\n\nSettings\n\n\nBy default, settings for arena are taken from default config that can be configured in the same file (\nconfig.json\n). Default arena config is a object named \narena\n. It needs to contain all of the settings in table below.\n\n\nYou can also set custom settings for each arena by adding a new object \nconfig\n to arena object. This object can contain settings of the following table. Custom settings override default settings.\n\n\nFor example, in example below, arena \nMiniWalls-2\n always has a \nstartDelay\n 33333, no matter what it's in default config. However, this only applies to arena \nMiniWalls-2\n, all other arenas that don't have \nstartDelay\n, have a default value.\n\n\n{\n    \"name\": \"MiniWalls-2\",\n    \"config\": {\n        \"startDelay\": 33333\n    }\n}\n\n\nArena Settings\n\n\n\n\n\n\n\n\nkey\n\n\nvalue type\n\n\ndefault\n\n\nexplanation\n\n\n\n\n\n\n\n\n\n\nstartDelay\n\n\nduration\n\n\n45000\n\n\nduration after game starts when arena has atleast players specified in \nminPlayers\n\n\n\n\n\n\nserverFullStartDelay\n\n\nduration\n\n\n10000\n\n\nduration after game starts when arena is full\n\n\n\n\n\n\nwallsTime\n\n\nduration\n\n\n15000\n\n\nduration after walls drop\n\n\n\n\n\n\ndeathmatchTime\n\n\nduration\n\n\n180000\n\n\nduration after deathmatch begins since start of the game\n\n\n\n\n\n\nshrinkTime\n\n\nduration\n\n\n200000\n\n\nduration after map starts to shrink since start of the game\n\n\n\n\n\n\nmaxTime\n\n\nduration\n\n\n300000\n\n\nmax duration that game can last\n\n\n\n\n\n\nminPlayers\n\n\ninteger\n\n\n8\n\n\nminimum amount of players with what game can begin\n\n\n\n\n\n\nmaxPlayers\n\n\ninteger\n\n\n16\n\n\nmaximum amount of players\n\n\n\n\n\n\nmaxSpectators\n\n\ninteger\n\n\n24\n\n\nmaximum amount of spectators\n\n\n\n\n\n\nmaps\n\n\narray of strings\n\n\nforest, volcano\n\n\nnames of maps that are in arena\n\n\n\n\n\n\n\n\nStorage\n\n\nBy default Mini Walls stores players' data (stats and unlocked kits) in directory \nplugins/MiniWalls/db\n. You can change the storage type in general config (see above - General config). \n\n\n\n\nWarning\n\n\nIf you change the storage type, data from previous type isn't migrated to new one. It means that you lose all the data when you change storage type.\n\n\n\n\nTeams\n\n\nTeams are configured in \nconfig.json\n file. They are set in an array \nteams\n that contains team JSON objects. Below is explanation of the team JSON object.\n\n\n\n\n\n\n\n\nkey\n\n\nvalue type\n\n\nexplanation\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nname of the team; this needs to match the wither name in map config (\nSee Maps\n)\n\n\n\n\n\n\ndisplayName\n\n\nstring\n\n\nname that is displayed to players\n\n\n\n\n\n\ncolor\n\n\nchat color\n\n\ncolor of the team; in that color is sometimes the \ndisplayName\n; on that depends the armor and wool color\n\n\n\n\n\n\n\n\nKits\n\n\nAll Mini Walls players have a kit. Each kit is sort of a \"custom skill\". With every kit come items that player gets every time he or she spawns or continuously. Kits are configured in \nkits.json\n file. That files contains a array of kit JSON objects. Here is a specification of kit JSON item.\n\n\n\n\n\n\n\n\nkey\n\n\nvalue type\n\n\nexplanation\n\n\ndefault\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nkit name\n\n\n\n\n\n\n\n\ndisplayName\n\n\nstring\n\n\nname that is displayed to players\n\n\n\n\n\n\n\n\ndefault\n\n\nboolean\n\n\nif true this kit is equipped when player joins the arena\n\n\nfalse\n\n\n\n\n\n\nprice\n\n\ninteger\n\n\nprice of this kit, if bigger than 0 players need to buy it using in-game currency in order to use it\n\n\n0\n\n\n\n\n\n\npermission\n\n\nstring\n\n\npermission players need to use the kit\n\n\nnone\n\n\n\n\n\n\nitem\n\n\nmaterial\n\n\nmaterial of item that is shown in inventory kit selector\n\n\n\n\n\n\n\n\nitems\n\n\narray of \nkititem\ns\n\n\nlist of items that are supplied to player\n\n\n\n\n\n\n\n\nkititem.supplyType\n\n\nstring\n\n\nwhen this item is supplied, \nonce\n when it's supplied on spawn, \narmor\n when it's supplied as armor on spawn, \ncontinuous\n if item is supplied after delay\n\n\n\n\n\n\n\n\nkititem.item\n\n\nitemstack\n\n\nminecraft item that is supplied\n\n\n\n\n\n\n\n\nkititem.delay\n\n\nduration\n\n\nif \nsupplyType\n is \ncontinuous\n, delay between giving item to player\n\n\n\n\n\n\n\n\nkititem.maxAmount\n\n\ninteger\n\n\nif \nsupplyType\n is \ncontinuous\n, amount that player can maximally have in inventory, use -1 to set no limit\n\n\n-1\n\n\n\n\n\n\n\n\nMaps\n\n\nEvery Mini Walls game takes place in a map. Maps are configured in \nmaps.json\n file. That file contains an array of map JSON objects. Here is a specification for this object.\n\n\n\n\n\n\n\n\nkey\n\n\nvalue type\n\n\nexplanation\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nunique name for each map; this name is used to configure arena maps\n\n\n\n\n\n\ndisplayName\n\n\nstring\n\n\nname that is shown to players\n\n\n\n\n\n\nborder\n\n\ncuboid\n\n\narea where game takes place; players can't go outside of it;\n\n\n\n\n\n\nlobbyArea\n\n\ncuboid\n\n\narea of map that is lobby; it's a place where players are before game starts;  players can't go outside of it; it's removed when game starts\n\n\n\n\n\n\nlobbySpawn\n\n\nlocation\n\n\nwhere players are teleported when they join an arena that's in lobby.\n\n\n\n\n\n\nwithers\n\n\nobject containing team \nname\n as key\n\n\nspawn points for withers, every key in that objecr has to match team's \nname\n\n\n\n\n\n\nwalls\n\n\narray of cuboids\n\n\narea where walls are; when walls drop all blocks in these cuboids are removed\n\n\n\n\n\n\n\n\nWhen adding a new map you have to copy it's world to \nplugins/MiniWalls\n and name it like \nmap-mapname\n. For example if the \nname\n of your map is \ndust2\n, the world folder has to be named \nmap-dust2\n.\n\n\n\n\nNote\n\n\nWhen creating a custom map, don't forget to set the spawnpoint. World spawnpoint is a location where spectators are teleported when they join the game. Spawnpoint can be set in vanilla with command \n/setworldspawn\n.\n\n\n\n\nLanguage\n\n\nYou can change almost all messages Mini Walls sends to players. By default messages are in \nen.properties\n, however this can be changed in main config file (\nsee general config\n).\n\n\nSigns\n\n\nYou can create signs for arenas that can be used to join the arena.\n\n\nHere is a example of a sign\n\n\n\n\nAs you can see, \n\n\n\n\nthe first line shows arena's name\n\n\nthe second shows arena's state, for example Recruiting or In Game (Recruiting = Waiting for Players)\n\n\nthe third shows player count in arena; it's green when there is room in arena and arena is in lobby\n\n\nthe fourth shows arena's map\n\n\n\n\nCreating a sign\n\n\nCreating such sign is quite simple. All you need to do is set \nsigns\n to \ntrue\n in \ngeneral config\n and put down a sign with following format:\n\n\n\n\n[MW]\n\n\nArena name \n(for example MiniWalls-1)\n\n\n(empty)\n\n\n(empty)\n\n\n\n\nHere is a example:\n\n\n\n\nThe \n and \n aren't actually in the sign, they show active line in Minecraft Sign Editor\n\n\n\n\nNote\n\n\nYou need to have a permission to create a sign. \nSee Permissions\n\n\n\n\nCommands\n\n\n\n\n\n\n\n\ncommand\n\n\nexplanation\n\n\npermission\n\n\n\n\n\n\n\n\n\n\n/mw join [arena]\n\n\nJoin an arena or open arena joining GUI\n\n\n-\n\n\n\n\n\n\n/mw leave\n\n\nLeave from arena\n\n\n-\n\n\n\n\n\n\n/mw arena [player]\n\n\nSee the arena of specified player. If not set, shows sender's arena\n\n\n-\n\n\n\n\n\n\n/mw start [arena]\n\n\nStarts the game in specified arena. If not set, starts game in sender's arena\n\n\nwalls.admin.start\n\n\n\n\n\n\n/mw stop [arena] [winner team]\n\n\nStops the game in specified arena with specified winner. If arena is not set, sender's arena is used. If winner team is not set, biggest team is used.\n\n\nwalls.admin.stop\n\n\n\n\n\n\n\n\nPermissions\n\n\n\n\n\n\n\n\npermission\n\n\nexplanation\n\n\n\n\n\n\n\n\n\n\nwalls.join-full-game\n\n\nlets player join an arena even if it's full\n\n\n\n\n\n\nwalls.admin.create-sign\n\n\nlets player create signes", 
            "title": "Home"
        }, 
        {
            "location": "/#spigot-mini-walls-plugin-documentation", 
            "text": "", 
            "title": "Spigot Mini Walls Plugin - Documentation"
        }, 
        {
            "location": "/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/#prerequisites", 
            "text": "Java 8 or newer  Spigot server with Minecraft 1.8.*, 1.9.* or 1.10  Vault  ProtocolLib  An economy plugin that hooks with Vault. You only need it when you want to enable economy (players receive currency for kills, can buy kits for in-game currency etc)   If you have BungeeCord or Lilypad server it\u2019s recommended to create separate server to run MiniWalls. If you can\u2019t create separate server for MiniWalls it\u2019s not recommended to run other games on this server as\u00a0they\u00a0may\u00a0conflict\u00a0with\u00a0MiniWalls.", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/#installing-plugin", 
            "text": "Download the plugin from Spigot  Copy plugin jar (for example MiniWalls.jar or whatever the plugin's version is) to your server plugins directory  Start server  Look for any errors in console. If there are any you probably don't met all the prerequisites. If you can't figure out why you're having errors and can't fix them contact me by PM on Spigot and I will help you out.  Ignore  errors starting like this:  java.lang.RuntimeException: java.io.FileNotFoundException: Source 'plugins\\MiniWalls\\map-forest' does not exist , these are there because you haven't setup the plugin yet.  Stop server  Download and copy map directories  map-forest  and  map-volcano  to the plugin directory  plugins/MiniWalls . Do this only if you want to use premade maps.  Click here to download!  Configure the config files (tutorial below) (This step is optional. If you have copied map directories and your server mets all prerequisites you are ready to use the plugin)  Start server and have fun!", 
            "title": "Installing\u00a0plugin"
        }, 
        {
            "location": "/#configuration-files", 
            "text": "With MiniWalls come quite a few configuration files. They are located in plugin's main directory  plugins/MiniWalls .  There are 4 files in total -  config.json ,  kits.json ,  maps.json  and  en.properties . Files ending with .json use JSON syntax and  en.properties  uses Java .properties syntax.", 
            "title": "Configuration files"
        }, 
        {
            "location": "/#json", 
            "text": "Introduction and Syntax  Online validator (check if your file follows syntax)", 
            "title": "JSON"
        }, 
        {
            "location": "/#properties", 
            "text": "Introduction and Syntax   Data types  In JSON configuration files there is a data type for every configuration value. That means that each item/key needs a specific value. For example  currencyPerKill  in economy config needs a value which is integer, but  enabled  in the same config needs a boolean value (true or false). Here is a table of all data types currently in use in config files.      Data type  Value  Example      boolean  true or false  true    string  a sequence of characters  \"hey that's a string\"    integer  an integer  15    number  an integer or floating point number  7.25    duration  duration in milliseconds  15000    material  minecraft material name string,   click here  for list  \"diamond_pickaxe\"    chat color  minecraft color string,  click here  for list  \" c\"    itemstack  Minecraft item as JSON object containing  material ,   amount ,  data  and  unbreakable  {\"material\": \"wool\",\"data\": 14, \"amount\": 64}    itemstack.material  material of the itemstack  see above - material    itemstack.amount  integer size of itemstack (optional, default 1)  see above - integer    itemstack.data  integer data/durability of itemstack (optional, default 0)  see above - integer    itemstack.unbreakable  boolean value whether itemstack is unbreakable (optional, default false)  see above - boolean    location  JSON object containing x, y and z coordinates  {\"x\": 147, \"y\": 64.5, \"z\": -1024}    location.x, location.y, location.z,  number value of the coordinate  see above - number    cuboid  JSON object containing bounds of cuboid  {\"loc1\": {\"x\": 15, \"y\": 0, \"z\": -25.5}, \"loc2\": {\"x\": 768, \"y\": 25, \"z\": 400}}    cuboid.loc1, cuboid.loc2  location of bound  see above - location", 
            "title": ".properties"
        }, 
        {
            "location": "/#general-config", 
            "text": "General config is in  config.json  file and contains most of the settings of the MiniWalls plugin. Here is a table which explains what each setting there does.     key  value type  default  explanation      general.locale  string  en.properties  file where plugin looks for translations; has to be located in plugin directory  plugins/MiniWalls    general.balanceTeams  boolean  true  if true players can't join teams that are bigger than their current team    general.showServerJoinMessages  boolean  false  if false players are not informed when someone joins the server    general.signs  boolean  false  whether signs are enabled (see below:  Signs )    economy.enabled  boolean  true  if true players receive currency for certain activities and can buy kits;    economy.currencyPerKill  integer  10  the amount of currency player receives when (s)he gets a kill    economy.currencyPerAssist  integer  3  the amount of currency player receives when (s)he gets a kill assist    economy.currencyPerWin  integer  50  the amount of currency player receives when (s)he wins a game    economy.currencyPerGame  integer  15  the amount of currency player receives when (s)he plays a game    bungeeMode.enabled  boolean  false  if true plugin attempts to send player to  bungeeMode.arena  after joining and to  bungeeMode.hub  after player quits.    bungeeMode.arena  string  MiniWalls-1  arena name where player is sent to after joining the server    bungeeMode.hub  string  hub  server name where player is sent to after quitting    data.storageType  string  file  how player data (stats, unlocked kits etc) are stored;  file  or  mysql    data.mysql.host  string  localhost  mysql host    data.mysql.port  integer  3306  mysql port    data.mysql.username  string  root  mysql username    data.mysql.password  string   mysql password    data.mysql.db  string  miniwalls  mysql database    data.file.directory  string  db  directory where player data is stored when  storageType  is  file ; it's relative to plugin directory, so for default it's  plugins/MiniWalls/db    arena  arena config   See Arenas    teams  array of teams   See more information about that in Team    arenas  array of arenas   See Arenas", 
            "title": "General Config"
        }, 
        {
            "location": "/#arenas", 
            "text": "Each arena is a Mini Walls game to where player can connect. Every arena has it's own players, world etc. Arenas are configured in main config file  config.json . They are set in an array  arenas .   Every JSON object in  arenas  contains a setting  name . Data type of this setting is  string .  name  is the only setting you need to set for every arena. For example arena JSON object can look like  {\"name\": \"MyAwesomeArena\"}  Settings  By default, settings for arena are taken from default config that can be configured in the same file ( config.json ). Default arena config is a object named  arena . It needs to contain all of the settings in table below.  You can also set custom settings for each arena by adding a new object  config  to arena object. This object can contain settings of the following table. Custom settings override default settings.  For example, in example below, arena  MiniWalls-2  always has a  startDelay  33333, no matter what it's in default config. However, this only applies to arena  MiniWalls-2 , all other arenas that don't have  startDelay , have a default value.  {\n    \"name\": \"MiniWalls-2\",\n    \"config\": {\n        \"startDelay\": 33333\n    }\n}  Arena Settings     key  value type  default  explanation      startDelay  duration  45000  duration after game starts when arena has atleast players specified in  minPlayers    serverFullStartDelay  duration  10000  duration after game starts when arena is full    wallsTime  duration  15000  duration after walls drop    deathmatchTime  duration  180000  duration after deathmatch begins since start of the game    shrinkTime  duration  200000  duration after map starts to shrink since start of the game    maxTime  duration  300000  max duration that game can last    minPlayers  integer  8  minimum amount of players with what game can begin    maxPlayers  integer  16  maximum amount of players    maxSpectators  integer  24  maximum amount of spectators    maps  array of strings  forest, volcano  names of maps that are in arena", 
            "title": "Arenas"
        }, 
        {
            "location": "/#storage", 
            "text": "By default Mini Walls stores players' data (stats and unlocked kits) in directory  plugins/MiniWalls/db . You can change the storage type in general config (see above - General config).    Warning  If you change the storage type, data from previous type isn't migrated to new one. It means that you lose all the data when you change storage type.", 
            "title": "Storage"
        }, 
        {
            "location": "/#teams", 
            "text": "Teams are configured in  config.json  file. They are set in an array  teams  that contains team JSON objects. Below is explanation of the team JSON object.     key  value type  explanation      name  string  name of the team; this needs to match the wither name in map config ( See Maps )    displayName  string  name that is displayed to players    color  chat color  color of the team; in that color is sometimes the  displayName ; on that depends the armor and wool color", 
            "title": "Teams"
        }, 
        {
            "location": "/#kits", 
            "text": "All Mini Walls players have a kit. Each kit is sort of a \"custom skill\". With every kit come items that player gets every time he or she spawns or continuously. Kits are configured in  kits.json  file. That files contains a array of kit JSON objects. Here is a specification of kit JSON item.     key  value type  explanation  default      name  string  kit name     displayName  string  name that is displayed to players     default  boolean  if true this kit is equipped when player joins the arena  false    price  integer  price of this kit, if bigger than 0 players need to buy it using in-game currency in order to use it  0    permission  string  permission players need to use the kit  none    item  material  material of item that is shown in inventory kit selector     items  array of  kititem s  list of items that are supplied to player     kititem.supplyType  string  when this item is supplied,  once  when it's supplied on spawn,  armor  when it's supplied as armor on spawn,  continuous  if item is supplied after delay     kititem.item  itemstack  minecraft item that is supplied     kititem.delay  duration  if  supplyType  is  continuous , delay between giving item to player     kititem.maxAmount  integer  if  supplyType  is  continuous , amount that player can maximally have in inventory, use -1 to set no limit  -1", 
            "title": "Kits"
        }, 
        {
            "location": "/#maps", 
            "text": "Every Mini Walls game takes place in a map. Maps are configured in  maps.json  file. That file contains an array of map JSON objects. Here is a specification for this object.     key  value type  explanation      name  string  unique name for each map; this name is used to configure arena maps    displayName  string  name that is shown to players    border  cuboid  area where game takes place; players can't go outside of it;    lobbyArea  cuboid  area of map that is lobby; it's a place where players are before game starts;  players can't go outside of it; it's removed when game starts    lobbySpawn  location  where players are teleported when they join an arena that's in lobby.    withers  object containing team  name  as key  spawn points for withers, every key in that objecr has to match team's  name    walls  array of cuboids  area where walls are; when walls drop all blocks in these cuboids are removed     When adding a new map you have to copy it's world to  plugins/MiniWalls  and name it like  map-mapname . For example if the  name  of your map is  dust2 , the world folder has to be named  map-dust2 .   Note  When creating a custom map, don't forget to set the spawnpoint. World spawnpoint is a location where spectators are teleported when they join the game. Spawnpoint can be set in vanilla with command  /setworldspawn .", 
            "title": "Maps"
        }, 
        {
            "location": "/#language", 
            "text": "You can change almost all messages Mini Walls sends to players. By default messages are in  en.properties , however this can be changed in main config file ( see general config ).", 
            "title": "Language"
        }, 
        {
            "location": "/#signs", 
            "text": "You can create signs for arenas that can be used to join the arena.  Here is a example of a sign   As you can see,    the first line shows arena's name  the second shows arena's state, for example Recruiting or In Game (Recruiting = Waiting for Players)  the third shows player count in arena; it's green when there is room in arena and arena is in lobby  the fourth shows arena's map", 
            "title": "Signs"
        }, 
        {
            "location": "/#creating-a-sign", 
            "text": "Creating such sign is quite simple. All you need to do is set  signs  to  true  in  general config  and put down a sign with following format:   [MW]  Arena name  (for example MiniWalls-1)  (empty)  (empty)   Here is a example:   The   and   aren't actually in the sign, they show active line in Minecraft Sign Editor   Note  You need to have a permission to create a sign.  See Permissions", 
            "title": "Creating a sign"
        }, 
        {
            "location": "/#commands", 
            "text": "command  explanation  permission      /mw join [arena]  Join an arena or open arena joining GUI  -    /mw leave  Leave from arena  -    /mw arena [player]  See the arena of specified player. If not set, shows sender's arena  -    /mw start [arena]  Starts the game in specified arena. If not set, starts game in sender's arena  walls.admin.start    /mw stop [arena] [winner team]  Stops the game in specified arena with specified winner. If arena is not set, sender's arena is used. If winner team is not set, biggest team is used.  walls.admin.stop", 
            "title": "Commands"
        }, 
        {
            "location": "/#permissions", 
            "text": "permission  explanation      walls.join-full-game  lets player join an arena even if it's full    walls.admin.create-sign  lets player create signes", 
            "title": "Permissions"
        }
    ]
}